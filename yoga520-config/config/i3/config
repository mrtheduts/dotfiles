# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $set_wallpaper feh --bg-fill /home/mrtheduts/Pictures/Wallpapers/kingkiller/auri_cinza.jpg
set $rotate_screen ~/Random/scripts/rotate_screen.sh
set $lockscreen betterlockscreen -l dim -t "All stories are true."
set $set_pen_screen xinput map-to-output $(xinput | grep -i "pen" | cut -f 2 | cut -f2 -d '=' | tr '\n' ' ' | cut -f 1 -d ' ') eDP1 || exit && xinput map-to-output $(xinput | grep -i "pen" | cut -f 2 | cut -f2 -d '=' | tr '\n' ' ' | cut -f 2 -d ' ') eDP1

#exec --no-startup-id $set_wallpaper
#exec --no-startup-id compton -b --config ~/.config/compton/compton.conf
#exec --no-startup-id ~/Random/scripts/disable_touchscreen_startup.sh
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh my_bar
#exec --no-startup-id libinput-gestures-setup start

#exec --no-startup-id "xsetwacom set 'Wacom HID 5107 Pen stylus' TabletPCButton on"
#exec --no-startup-id "xsetwacom set 'Wacom HID 5107 Pen stylus' Button 2 3"

gaps inner 10
gaps outer 0

#smart_gaps on

default_border none
#smart_borders on

hide_edge_borders smart_no_gaps

client.focused #292929 #292929 #ffffff #aa0000 #292929
client.unfocused #202020 #202020 #777777 #aa0000 #292929

popup_during_fullscreen smart

workspace_auto_back_and_forth yes


set $mod Mod4

bindsym ctrl+$mod+l exec lockkbmouse
#bindsym ctrl+Mod1+l exec xlock -mode marquee -mono +mousemotion -erasemode no_fade -usefirst -verboseS
bindsym ctrl+Mod1+l exec $lockscreen

bindsym $mod+shift+p exec $set_pen_screen
bindsym $mod+shift+w exec $set_wallpaper

#bindsym $mod+F5 exec --no-startup-id $rotate_screen
 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

#Brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 3
bindsym XF86MonBrightnessDown exec xbacklight -dec 3

#Printscreen

bindsym Print exec import -window root png:- | \
    xclip -selection clipboard -t image/png

bindsym $mod+Print exec \
     import -window $( \
         i3-msg -t get_tree | \
         jq 'recurse(.nodes[]) | select(.focused).window' \
     ) png:- | \
     xclip -selection clipboard -t image/png

bindsym ctrl+Print exec flameshot gui


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
floating_maximum_size 1200 x 600

# start a terminal
set $term terminator
bindsym $mod+Return exec $term

## quick terminal
#exec --no-startup-id terminator -T "dropdown"
#for_window [title="dropdown"] floating enable, move scratchpad, scratchpad show;
#for_window [title="dropdown"] move scratchpad;
#bindsym $mod+t [title="dropdown"] scratchpad show ; [title="dropdown"] move position center

# Youtube floating mode
# do
bindsym $mod+y fullscreen disable; floating enable; resize set 440 247, sticky enable; move window to position 926 521;

# undo
bindsym $mod+Shift+y fullscreen disable; floating disable; sticky disable

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run -b 
#Rofi - menu
bindsym $mod+d exec rofi -show run -modi run -location 7 -width 100 -lines 1 -line-margin 0 -line-padding 1 -separator-style none -font "mono 10" -columns 9 -bw 0 -disable-history -hide-scrollbar -kb-row-select "Tab" -kb-row-tab "" -theme Pop-Dark
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+Left focus left
bindsym $mod+h focus left

bindsym $mod+Down focus down
bindsym $mod+j focus down

bindsym $mod+Up focus up
bindsym $mod+k focus up

bindsym $mod+Right focus right
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+c split H

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8."
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# jump left/rigt one workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Hide border for all windows
for_window [class="^.*"] border pixel 0

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

set $mode_system System (e)xit, (s)uspend, (r)eboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym e exec i3-msg exit, mode "default"
    bindsym s exec betterlockscreen -s -l dim -t "All stories are true.", mode "default"
    #bindsym h exec --no-startup-id /home/mrtheduts/Random/scripts/i3exit.sh hibernate, mode "default"
    bindsym r exec reboot, mode "default"
    bindsym Shift+s exec shutdown 0, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Escape mode "$mode_system"

set $mode_monitor Monitor (n)notebook, (h)dmi, extend (a)bove
mode "$mode_monitor" {
        bindsym n exec --no-startup-id "killall polybar && xrandr --output eDP1 --auto --primary && xrandr --output HDMI1 --off && i3-msg mode 'default' && MONITOR=eDP1 polybar my_bar && $set_wallpaper"

        bindsym h exec --no-startup-id "killall polybar && xrandr --output HDMI1 --auto --primary && xrandr --output eDP1 --off && i3-msg mode 'default' && MONITOR=HDMI1 polybar my_bar && $set_wallpaper"

        #bindsym m exec --no-startup-id "xrandr --output eDP1 --auto --primary && xrandr --output HDMI1 --auto --same-as eDP1 --noprimary && i3-msg mode 'default'"

        bindsym a exec --no-startup-id "killall polybar && xrandr --output eDP1 --auto --primary && xrandr --output HDMI1 --auto --above eDP1 --noprimary && i3-msg mode 'default' && MONITOR=eDP1 polybar my_bar && $set_wallpaper"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+p mode "default"
}
bindsym $mod+p mode "$mode_monitor"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym shift+Left gaps inner all minus 5
        bindsym shift+Right gaps inner all plus 5

        bindsym shift+Up gaps outer all minus 5
        bindsym shift+Down gaps outer all plus 5

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 2 px or 2 ppt
        bindsym Down resize grow height 2 px or 2 ppt
        bindsym Up resize shrink height 2 px or 2 ppt
        bindsym Right resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command polybar example
#}
