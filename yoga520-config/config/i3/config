# mrtheduts' i3 config file
# inspired by Doug Black's https://dougblack.io/words/a-good-vimrc.html

# User Variables {{{

    # $mod as Win key
    set $mod Mod4
    # Command to lock the screen
    set $lockscreen "physlock -p 'Hello, friend' -m"
    # Wallpaper setter
    set $set_wallpaper DISPLAY=:0 sh ~/.fehbg
    # Command to execute script of mine that handles tablet mode
    set $tablet_mode ~/Scripts/easy-tablet.sh -s "~/Scripts/tablet-mode-on.sh","~/Scripts/tablet-mode-off.sh"
    # Default terminal
    set $term terminator

# }}}

# Exec on startup {{{

    # Window compositor
    exec --no-startup-id compton -b --config ~/.config/compton/compton.conf
    # Custom gesture handler on touchpad
    exec --no-startup-id libinput-gestures-setup start
    # Set wallpaper
    exec --no-startup-id $set_wallpaper
    # Execute script of mine that handles tablet mode
    exec --no-startup-id $tablet_mode
    # Disable touchscreen default gestures
    exec --no-startup-id xsetwacom --set $(xsetwacom --list | grep -i touch | grep -o '[0-9]*' | tail -n 1 | tr -d '\n') Gesture off

# }}}

# Bindsyms {{{

    # Screen Lockers {{{
        # Lock screen and ttys
        bindsym $mod+Mod1+l exec $lockscreen
        # Lock keyboard and mouse only, keeping screen on
        bindsym ctrl+shift+l exec xtrlock
    # }}}

    # Pulse Audio controls {{{
        # Raise Master volume in 5%
        bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+ on
        # Lower Master volume in 5%
        bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%- on
        # Toggle Master to mute/unmute
        bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle
    # }}}

    # Brightness controls {{{
        # Raise brightness in 5%
        bindsym XF86MonBrightnessUp exec light -A 5
        # Lower brightness in 5%
        bindsym XF86MonBrightnessDown exec light -U 5
    # }}}

    # Printscreen {{{
        # Import root window as png and save to clipboard
        bindsym Print exec import -window root png:- | xclip -selection clipboard -t image/png

        # Import focused window as png and save to clipboard
        # TODO: make it work for floating focused windows
        bindsym $mod+Print exec \
        import -window $( \
            i3-msg -t get_tree | \
            jq 'recurse(.nodes[]) | select(.focused).window' \
        ) png:- | \
        xclip -selection clipboard -t image/png

        # Execute Flameshot with edit tools
        bindsym ctrl+Print exec flameshot gui
    # }}}

    # Floating video mode {{{
        # Run script to move focused window to the
        # bottom-left corner of the screen, floating
        bindsym $mod+y exec /home/mrtheduts/Scripts/move-window-to-corner.sh
        # Undo it
        bindsym $mod+Shift+y fullscreen disable; floating disable; sticky disable;
    # }}}
 
    # Application openers {{{
        # Rofi with run and window mode 
        bindsym $mod+d exec "rofi -modi combi -combi-modi window,drun -show combi -theme Pop-Dark"
        # dmenu for when in tablet mode
        bindsym $mod+Shift+d exec "dmenu_run"
    # }}}

    # Open default terminal
    bindsym $mod+Return exec $term

    # Toggle touchscreen On/Off with Power Button
    bindsym XF86PowerOff exec /home/mrtheduts/Scripts/toggle-touchscreen.sh

    # Set wallpaper
    bindsym $mod+shift+w exec $set_wallpaper

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym $mod+Shift+r restart

    # Exit i3 (logs you out of your X session)
    bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# }}}

# Window-related configs {{{

    # Change focus {{{
        #Change focus to left
        bindsym $mod+Left focus left
        bindsym $mod+h focus left
        #Change focus to down 
        bindsym $mod+Down focus down
        bindsym $mod+j focus down
        #Change focus to up 
        bindsym $mod+Up focus up
        bindsym $mod+k focus up
        #Change focus to right 
        bindsym $mod+Right focus right
        bindsym $mod+l focus right

        # Focus the parent container
        bindsym $mod+a focus parent
        # Focus the child container
        bindsym $mod+z focus child

        # Change focus between tiling / floating windows
        bindsym $mod+space focus mode_toggle
    # }}}

    # Move focused window {{{
        # Move window towards the left
        bindsym $mod+Shift+h move left
        # Move window towards the bottom
        bindsym $mod+Shift+j move down
        # Move window towards the top
        bindsym $mod+Shift+k move up
        # Move window towards the right
        bindsym $mod+Shift+l move right
    # }}}

    # Resize window {{{
        # Grow width
        bindsym $mod+Ctrl+l resize grow width 1 px or 1 ppt
        # Shrink width
        bindsym $mod+Ctrl+h resize shrink width 1 px or 1 ppt
        # Grow height
        bindsym $mod+Ctrl+j resize grow height 1 px or 1 ppt
        # Shrink height
        bindsym $mod+Ctrl+k resize shrink height 1 px or 1 ppt
    # }}}

    # Layout-related {{{
        # Change container layout (stacked, tabbed, toggle split)
        bindsym $mod+s layout stacking
        bindsym $mod+w layout tabbed
        bindsym $mod+e layout toggle split

        # Split in horizontal orientation
        bindsym $mod+c split h
        # Split in vertical orientation
        bindsym $mod+v split v
    # }}}

    # Floating-related {{{
        # Set key to move floating windows
        floating_modifier $mod
        # Set maximum size for floating windows
        floating_maximum_size 1200 x 600
    # }}}

    # Only exit fullscreen if popup belongs to
    # the fullscreen application
    popup_during_fullscreen smart

    # Toggle tiling / floating
    bindsym $mod+Shift+space floating toggle

    # Enter fullscreen mode for the focused container
    bindsym $mod+f fullscreen toggle

    # Kill focused window
    bindsym $mod+q kill

# }}}

# Workspace-related configs {{{

    # Workspace names {{{
        # We use variables to avoid repeating the names in multiple places.
        set $ws1 "1"
        set $ws2 "2"
        set $ws3 "3"
        set $ws4 "4"
        set $ws5 "5"
        set $ws6 "6"
        set $ws7 "7"
        set $ws8 "8."
        set $ws9 "9"
        set $ws10 "10"
    # }}}

    # Switch to workspace {{{
        # Jump directly to  specific workspace
        bindsym $mod+1 workspace $ws1
        bindsym $mod+2 workspace $ws2
        bindsym $mod+3 workspace $ws3
        bindsym $mod+4 workspace $ws4
        bindsym $mod+5 workspace $ws5
        bindsym $mod+6 workspace $ws6
        bindsym $mod+7 workspace $ws7
        bindsym $mod+8 workspace $ws8
        bindsym $mod+9 workspace $ws9
        bindsym $mod+0 workspace $ws10

        # Jump left/rigt one workspace
        bindsym $mod+Tab workspace next
        bindsym $mod+Shift+Tab workspace prev

        # Jump to previous workspace using 
        # the bindsym to jump to current workspace
        workspace_auto_back_and_forth yes
    # }}}

    # Move focused container {{{
        # Move to specific workspace directly
        bindsym $mod+Shift+1 move container to workspace $ws1
        bindsym $mod+Shift+2 move container to workspace $ws2
        bindsym $mod+Shift+3 move container to workspace $ws3
        bindsym $mod+Shift+4 move container to workspace $ws4
        bindsym $mod+Shift+5 move container to workspace $ws5
        bindsym $mod+Shift+6 move container to workspace $ws6
        bindsym $mod+Shift+7 move container to workspace $ws7
        bindsym $mod+Shift+8 move container to workspace $ws8
        bindsym $mod+Shift+9 move container to workspace $ws9
        bindsym $mod+Shift+0 move container to workspace $ws10
    # }}}

# }}}

# Appearance {{{

    # Hide border for all windows
    for_window [class="^.*"] border pixel 0
    
    # Font for text border
    font pango:Hack Nerd Font 8

    # Color of focused nodes's border
    client.focused #292929 #292929 #ffffff #aa0000 #292929
    # Color of unfocused nodes's border
    client.unfocused #202020 #202020 #777777 #aa0000 #292929

    # Align container title to center
    title_align center

# }}}

# Program-specifc configs {{{

    # mGBA config
    for_window[class="^mGBA$"] floating enable, move position center;

    # TODO: use zenity to warn about battery level
    for_window [instance="zenity"] sticky enable

# }}}

# Quick terminal {{{

    # Execute terminal on startup
    exec --no-startup-id terminator -T "dropdown"
    # Move it to scratchpad
    for_window [title="dropdown"] floating enable, move scratchpad;

    # Bindsym to toggle it
    bindsym $mod+t [title="dropdown"] resize set 700 400 ; scratchpad show ; [title="dropdown"] move position center

# }}}

# Modes {{{

    # System {{{
    # Mode to shutdown, reboot or suspend the machine ou exit i3wm
        set $mode_system System (e)xit, (s)uspend, (r)eboot, (Shift+s) shutdown
        mode "$mode_system" {
            # Exit i3wm
            bindsym e exec i3-msg exit, mode "default"
            # Suspend machine
            bindsym s exec systemctl suspend, mode "default"
            # Reboot machine
            bindsym r exec reboot, mode "default"
            # Shutdown machine
            bindsym Shift+s exec systemctl poweroff, mode "default"
            # Hibernate machine (unused)
            #bindsym h exec --no-startup-id /home/mrtheduts/Random/scripts/i3exit.sh hibernate, mode "default"

            # Back to normal: Enter or Escape
            bindsym Return mode "default"
            bindsym Escape mode "default"
        }
        bindsym $mod+Escape mode "$mode_system"
    # }}}

    # Set Wacom {{{
    # Mode to choose which screen to map the wacom input to
        set $wacom_to_edp1 xsetwacom set 'Wacom HID 5107 Pen stylus' MapToOutput eDP1 && \
            xsetwacom set 'Wacom HID 5107 Pen eraser' MapToOutput eDP1 && \
            xsetwacom set 'Wacom HID 5107 Finger touch' MapToOutput eDP1

        set $wacom_to_hdmi1 xsetwacom set 'Wacom HID 5107 Pen stylus' MapToOutput HDMI1 && \
            xsetwacom set 'Wacom HID 5107 Pen eraser' MapToOutput HDMI1 && \
            xsetwacom set 'Wacom HID 5107 Finger touch' MapToOutput HDMI1

        set $mode_set_wacom Map Wacom Output to (h)dmi or (e)dp
        mode "$mode_set_wacom" {
            bindsym h exec --no-startup-id "$wacom_to_hdmi1", mode "default"
            bindsym e exec --no-startup-id "$wacom_to_edp1", mode "default"

            # Back to normal: Enter or Escape
            bindsym Return mode "default"
            bindsym Escape mode "default"
        }
        bindsym $mod+shift+p mode "$mode_set_wacom"
    # }}}

    # Monitor {{{
    # Mode to choose which screen to output to
        set $mode_monitor Monitor (n)notebook, (h)dmi, extend (a)bove
        mode "$mode_monitor" {
            # Use notebook screen
            bindsym n exec --no-startup-id "xrandr --output eDP1 --auto --primary && xrandr --output HDMI1 --off && $set_wallpaper && $wacom_to_edp1", mode "default"
            # Use HDMI
            bindsym h exec --no-startup-id "xrandr --output HDMI1 --auto --primary && xrandr --output eDP1 --off && $set_wallpaper", mode "default"
            # Extend HDMI above notebook screen
            bindsym a exec --no-startup-id "xrandr --output eDP1 --auto --primary && xrandr --output HDMI1 --auto --above eDP1 --noprimary && $wacom_to_edp1", mode "default"
            # Mirror (unused)
            #bindsym m exec --no-startup-id "xrandr --output eDP1 --auto --primary && xrandr --output HDMI1 --auto --same-as eDP1 --noprimary", mode "default"

            # Back to normal: Enter or Escape
            bindsym Return mode "default"
            bindsym Escape mode "default"
            bindsym $mod+p mode "default"
        }
        bindsym $mod+p mode "$mode_monitor"
    # }}}

    # Resize {{{
    # Mode to resize containers
        mode "Resize" {
            bindsym Left resize shrink width 2 px or 2 ppt
            bindsym Down resize grow height 2 px or 2 ppt
            bindsym Up resize shrink height 2 px or 2 ppt
            bindsym Right resize grow width 2 px or 2 ppt

            # back to normal: Enter or Escape or $mod+r
            bindsym Return mode "default"
            bindsym Escape mode "default"
            bindsym $mod+r mode "default"
        }
        bindsym $mod+r mode "resize"
    # }}}

# }}}

# Bar {{{

    bar {
        # Use i3bar as frame
        i3bar_command i3bar
        # Command to output information to ther bar
        status_command /bin/bumblebee-status -m nic brightness memory battery time pulseaudio -p time.format="%H:%M" -t solarized 

        # Show it on primary monitor
        tray_output primary
        # Place it on top of the screen
        position top

        # Keep it hidden until $mod is held
        mode hide
        hidden_state hide

        # Colours of the bar itself and i3 workspaces module
        colors {
            background #000000

            # Color of the border, background and text of the i3 module buttons
            focused_workspace #aaaaaaff #909090ff #303030ff
            inactive_workspace #0a0a0aff #0a0a0aff #909090ff
            urgent_workspace #ffffffff #af1818ff #ffffffff
        }

        # Font
        font pango:Hack Nerd Font Mono 10
        # Show only workspace name after ":", if used
        strip_workspace_numbers yes
        # Space used near screen edges
        tray_padding 1
    }

# }}}

# Open this file with folded Sections
# vim:foldmethod=marker:foldlevel=0
